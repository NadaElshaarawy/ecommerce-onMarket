# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SecurityGroup {
  id: ID!
  groupName: String!
  description: String
  permissions: [String!]!
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

scalar Timestamp

type User {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String!
  slug: String!
  email: String
  verifiedPhone: String
  gender: GenderEnum!
  country: String!
  profilePicture: String
  isBlocked: Boolean!
  favLang: LangEnum!
  securityGroup: SecurityGroup
  token: String
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

enum GenderEnum {
  MALE
  FEMALE
}

enum LangEnum {
  EN
  AR
}

type Item {
  id: ID!
  name: String!
  description: String
  price: Float!
  images: [String]
  isActive: Boolean!
}

type Order {
  id: ID!
  totalAmount: Float!
  orderStatus: OrderStatusEnum!
  orderLines: [OrderLine]
}

enum OrderStatusEnum {
  NEW
  COMPLETED
  CANCELED
}

type CartItem {
  id: ID!
  quantity: Int!
  item: Item
}

type PageInfo {
  totalCount: Int!
  totalPages: Int!
  page: Int!
  limit: Int!
  hasNext: Boolean!
}

type GqlBooleanResponse {
  data: Boolean
  code: Int!
  success: Boolean!
  message: String
}

type GqlUsersPagination {
  items: [User]
  pageInfo: PageInfo!
}

type GqlUserResponse {
  data: User
  code: Int!
  success: Boolean!
  message: String
}

type GqlItemsPagination {
  items: [Item]
  pageInfo: PageInfo!
}

type GqlItemsResponse {
  data: GqlItemsPagination
  code: Int!
  success: Boolean!
  message: String
}

type GqlItemResponse {
  data: Item
  code: Int!
  success: Boolean!
  message: String
}

type GqlSecurityGroupsPagination {
  items: [SecurityGroup]
  pageInfo: PageInfo!
}

type GqlSecurityGroupsResponse {
  data: [SecurityGroup]
  code: Int!
  success: Boolean!
  message: String
}

type GqlSecurityGroupResponse {
  data: SecurityGroup
  code: Int!
  success: Boolean!
  message: String
}

type OrderLine {
  id: ID!
  price: Float!
  quantity: Int!
}

type GqlOrdersPagination {
  items: [Order]
  pageInfo: PageInfo!
}

type GqlOrdersResponse {
  data: GqlOrdersPagination
  code: Int!
  success: Boolean!
  message: String
}

type GqlOrderResponse {
  data: Order
  code: Int!
  success: Boolean!
  message: String
}

type GqlCartItemsPagination {
  items: [CartItem]
  pageInfo: PageInfo!
}

type GqlCartItemsResponse {
  data: GqlCartItemsPagination
  code: Int!
  success: Boolean!
  message: String
}

type GqlCartItemResponse {
  data: CartItem
  code: Int!
  success: Boolean!
  message: String
}

type Query {
  itemBoard(itemId: String!): GqlItemResponse!
  singleItemForCustomer(itemId: String!): GqlItemResponse!
  itemsBoard(paginate: PaginatorInput, filter: ItemFilterBoard!): GqlItemsResponse!
  items(paginate: PaginatorInput, filter: ItemsFilter!): GqlItemsResponse!
  securityGroups: GqlSecurityGroupsResponse!
  securityGroup(securityGroupId: String!): GqlSecurityGroupResponse!
  getAllPermissions: GqlSecurityGroupsResponse!
  myOrders(filter: OrdersFilter!, paginate: PaginatorInput!): GqlOrdersResponse!
  ordersBoard(filter: OrdersFilterBoard!, paginate: PaginatorInput!): GqlOrdersResponse!
  myOrder(orderId: String!): GqlOrderResponse!
  getCartItems(paginate: PaginatorInput!): GqlCartItemsResponse!
}

input PaginatorInput {
  page: Float = 1
  limit: Float = 15
}

input ItemFilterBoard {
  searchKey: String
  isActive: Boolean
}

input ItemsFilter {
  searchKey: String
}

input OrdersFilter {
  status: OrderStatusEnum
}

input OrdersFilterBoard {
  userId: ID
  status: OrderStatusEnum
}

type Mutation {
  seedAdmin: GqlBooleanResponse!
  signup(input: SignUpInput!): GqlUserResponse!
  login(input: LoginInput!): GqlUserResponse!
  createItemBoard(input: CreateItemInput!): GqlItemResponse!
  updateItemBoard(input: UpdateItemInput!): GqlItemResponse!
  deleteItemBoard(itemId: String!): GqlBooleanResponse!
  createSecurityGroup(input: CreateSecurityGroupInput!): GqlSecurityGroupResponse!
  submitOrder: GqlOrderResponse!
  cancelOrder(orderId: String!): GqlOrderResponse!
  markOrderAsCompletedBoard(orderId: String!): GqlOrderResponse!
  addToCart(input: AddToCartInput!): GqlCartItemResponse!
  updateCartItem(input: UpdateCartItemInput!): GqlCartItemResponse!
  deleteCartItem(cartItemId: String!): GqlBooleanResponse!
  clearCart: GqlBooleanResponse!
}

input SignUpInput {
  firstName: String!
  lastName: String!
  birthDate: Timestamp!
  email: String
  phone: String!
  password: String!
  country: String!
}

input LoginInput {
  phone: String!
  password: String!
}

input CreateItemInput {
  name: String!
  description: String
  price: Float!
  images: [String]
}

input UpdateItemInput {
  itemId: ID!
  name: String
  description: String
  price: Float
  isActive: Boolean
  images: [String]
}

input CreateSecurityGroupInput {
  groupName: String!
  description: String
  permissions: [String!]!
}

input AddToCartInput {
  itemId: ID!
  quantity: Int!
}

input UpdateCartItemInput {
  cartItemId: ID!
  quantity: Int
}
